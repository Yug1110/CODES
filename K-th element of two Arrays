class Solution{
    public:
    int kthElement(int arr1[], int arr2[], int n, int m, int k)
    {
        int lo=min(arr1[0],arr2[0]);
        int hi=max(arr1[n-1],arr2[m-1]);
        if(k==n+m){
            return hi;
        }
        if(k==1){
            return lo;
        }
        int ans=1e9;
        while(lo<=hi){
            int mid=(lo+hi)/2;
            
            int count=0;
            count+=upper_bound(arr1,arr1+n,mid)-arr1;
            count+=upper_bound(arr2,arr2+m,mid)-arr2;
            
            if(count==k){
                ans=min(ans,mid);
                hi=mid-1;
            }
            else if(count<k){
                lo=mid+1;
            }
            else{
                int y= (upper_bound(arr1,arr1+n,mid-1)-arr1);
                y+=(upper_bound(arr2,arr2+m,mid-1)-arr2); 
                if(count>k && y<k){
                    ans=min(ans,mid);
                }
                hi=mid-1;
            }
        }
        return ans;
        
    }
};
