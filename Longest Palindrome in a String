class Solution {
  public:
    string longestPalin (string S) {
        // code here
        pair<int,int>ans={0,0};
        for(int i=0;i<S.length();i++){
            //odd length
            int left=i-1,right=i+1;
            while(left>=0 && right<S.length() && S[left]==S[right]){
                left--;
                right++;
            }
            
            if(right-left-2 > ans.second-ans.first){
                // cout<<i<<" "<<left<<" "<<right<<endl;
                ans={left+1,right-1};
            }
            
            //even length
            left=i,right=i+1;
            while(left>=0 && right<S.length() && S[left]==S[right]){
                left--;
                right++;
            }
            
            if(right-left-2 > ans.second-ans.first){
                // cout<<i<<" "<<left<<" "<<right<<endl;
                ans={left+1,right-1};
            }
        }
        string ans1="";
        for(int i=ans.first;i<=ans.second;i++){
            ans1=ans1+S[i];
        }
        // cout<<endl;
        return ans1;
        
    }
};
