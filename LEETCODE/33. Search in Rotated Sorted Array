class Solution {
public:
    int findMin(vector<int>&arr, int n){
        //complete the function here
        if(arr[0]<=arr[n-1]){
            return 0;
        }
        int lo=0,end=n-1;
        while(lo<end){
            int mid=(lo+end)/2;
            if(arr[mid]>=arr[0]){
                lo=mid+1;
            }
            else{
                end=mid;
            }
        }
        return lo;
    }
    
    int search(vector<int>& nums, int target) {
        int n=nums.size();
        if(n==1){
            if(nums[0]==target) return 0;
            else return -1;
        }
        int x=findMin(nums,n);
        int lo,hi;

        if(x==0){
            lo=0;hi=n-1;
        }
        else if(nums[0]<=target && target<=nums[x-1]){
            lo=0;hi=x-1;
        }
        else if(nums[x]<=target && target<=nums[n-1]){
            lo=x;hi=n-1;
        }
        else{
            return -1;
        }
        
        while(lo<=hi){
            int mid=(lo+hi)/2;
            if(nums[mid]==target){
                return mid;
            }
            else if(nums[mid]<target){
                lo=mid+1;
            }
            else{
                hi=mid-1;
            }
        }
        return -1;
    }
};
