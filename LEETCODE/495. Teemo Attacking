class Solution {
public:
vector<vector<int>> overlappedInterval(vector<vector<int>>& i) {
         // Code here
         vector<vector<int>>ans;
         sort(i.begin(),i.end());
         ans.push_back(i[0]);
         for(int x=1;x<i.size();x++){
             int l1=ans[ans.size()-1][0];
             int r1=ans[ans.size()-1][1];
             int l2=i[x][0];
             int r2=i[x][1];
             
             if(l2<=r1){
                 int r=max(r1,r2);
                 ans.pop_back();
                 ans.push_back({l1,r});
             }
             else{
                 ans.push_back(i[x]);
             }
         }
         return ans;
    }

    int findPoisonedDuration(vector<int>& t, int d) {
        vector<vector<int>>intervals;
        for(int i=0;i<t.size();i++){
            intervals.push_back({t[i],t[i]+d-1});
        }
        vector<vector<int>>ans1=overlappedInterval(intervals);
        int ans=0;
        for(int i=0;i<ans1.size();i++){
            ans+=ans1[i][1]-ans1[i][0]+1;
        }
        return ans;
    }
};
