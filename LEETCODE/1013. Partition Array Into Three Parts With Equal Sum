class Solution {
public:
    bool canThreePartsEqualSum(vector<int>& arr) {
        int n=arr.size();
        int sum=0;
        for(int i=0;i<n;i++){
            sum+=arr[i];
        }

        if(sum%3!=0){
            return false;
        }

        int req=sum/3;
        
        //finding first partition
        int sum1=arr[0], i=1;

        while(i<n && sum1!=req){
            sum1+=arr[i++];
        }

        // finding 3rd partition
        int sum3=arr[n-1], j=n-2;

        while(j>=0 && sum3!=req){
            sum3+=arr[j--];
        }
        // cout<<i<<" "<<j;
        if(sum1!=req || sum3!=req || i>j){
            return false;
        }

        cout<<i<<" "<<j;
        int sum2=0;
        for(int x=i;x<=j;x++){
            sum2+=arr[x];
        }

        if(sum2==req){
            return true;
        }
        else{
            return false;
        }
    }
};
