class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        sort(nums.begin(),nums.end());
        vector<vector<int>>ans;
        int n=nums.size();

        int i=0;
        while(i<n-3){
            int j=i+1;
            while(j<n-2){
                int k=j+1,l=n-1;
                long long x=(long long)target-(long long)nums[i]-(long long)nums[j];
                while(k<l){
                    if(x==nums[k]+nums[l]){
                        ans.push_back({nums[i],nums[j],nums[k],nums[l]});
                        k++;
                        l--;
                        while(nums[k]==nums[k-1] && k<l){
                            k++;
                        }
                        while(nums[l]==nums[l+1] && k<l){
                            l--;
                        }
                    }
                    else if(x>nums[k]+nums[l]){
                        k++;
                    }
                    else{
                        l--;
                    }
                }
                j++;
                while(nums[j]==nums[j-1] && j<n-2){
                    j++;
                }
            }
            i++;
            while(nums[i]==nums[i-1] && i<n-3){
                i++;
            }
        }
        return ans;
    }
};
