class Solution {
public:
    int surfaceArea(vector<vector<int>>& grid) {
        int ans=0;
        
        int n=grid.size();

        if(n==1){
            return 2*(1+2*grid[0][0]);
        }

        
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                if(grid[i][j]!=0) ans+=2; // for top and bottom

                //calculating column wise
                if(i==0){
                    ans+= grid[i][j];
                    ans+= max(grid[i][j] - grid[i+1][j], 0);
                }
                else if(i==n-1){
                    ans+=grid[i][j];
                    ans+= max(grid[i][j] - grid[i-1][j], 0);
                }
                else{
                    ans+= max(grid[i][j] - grid[i-1][j], 0);
                    ans+= max(grid[i][j] - grid[i+1][j], 0);
                }

                //calculating row wise
                if(j==0){
                    ans+= grid[i][j];
                    ans+= max(grid[i][j] - grid[i][j+1], 0);
                }
                else if(j==n-1){
                    ans+=grid[i][j];
                    ans+= max(grid[i][j] - grid[i][j-1], 0);
                }
                else{
                    ans+= max(grid[i][j] - grid[i][j-1], 0);
                    ans+= max(grid[i][j] - grid[i][j+1], 0);
                }

            }
        }

        return ans;

        


    }
};
