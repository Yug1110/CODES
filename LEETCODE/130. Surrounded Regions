class Solution {
public:
    void dfs(vector<vector<char>>&board, int row, int col, vector<vector<int>>&vis){
        vis[row][col]=1;
        int nrow,ncol;

        nrow=row-1;ncol=col;
        if(nrow>=0 && ncol>=0 && nrow<board.size() && ncol<board[0].size() && board[nrow][ncol]=='O' && vis[nrow][ncol]==0){
            dfs(board,nrow,ncol,vis);
        }

        nrow=row+1;ncol=col;
        if(nrow>=0 && ncol>=0 && nrow<board.size() && ncol<board[0].size() && board[nrow][ncol]=='O' && vis[nrow][ncol]==0){
            dfs(board,nrow,ncol,vis);
        }

        nrow=row;ncol=col-1;
        if(nrow>=0 && ncol>=0 && nrow<board.size() && ncol<board[0].size() && board[nrow][ncol]=='O' && vis[nrow][ncol]==0){
            dfs(board,nrow,ncol,vis);
        }

        nrow=row;ncol=col+1;
        if(nrow>=0 && ncol>=0 && nrow<board.size() && ncol<board[0].size() && board[nrow][ncol]=='O' && vis[nrow][ncol]==0){
            dfs(board,nrow,ncol,vis);
        }
    }

    void solve(vector<vector<char>>& board) {
        int n=board.size();
        int m=board[0].size();
        vector<vector<int>>vis(n,vector<int>(m,0));
        for(int i=0;i<m;i++){
            if(board[0][i]=='O' && vis[0][i]==0){
                dfs(board,0,i,vis);
            }
            if(board[n-1][i]=='O' && vis[n-1][i]==0){
                dfs(board,n-1,i,vis);
            }
            
        }

        for(int i=0;i<n;i++){
            if(board[i][0]=='O' && vis[i][0]==0){
                dfs(board,i,0,vis);
            }
            if(board[i][m-1]=='O' && vis[i][m-1]==0){
                dfs(board,i,m-1,vis);
            }
            
        }

        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(vis[i][j]==0){
                    board[i][j]='X';
                }
            }
        }
    }
};
