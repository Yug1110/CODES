class Solution {
public:
bool solve(string A,int ind, int n,unordered_map<string,bool>mp, vector<int>&dp){
        if(ind>=n) return true;
        if(dp[ind]!=-1) return dp[ind];
        
        for(int i=ind;i<n;i++){
            if(mp.find(A.substr(ind,i-ind+1))!=mp.end()){
                if(solve(A,i+1,n,mp,dp)){
                    return dp[ind] = true;
                }
            }
        }
        return dp[ind] = false;
    }
    bool wordBreak(string A, vector<string>& B) {
        unordered_map<string,bool>mp;
        for(int i=0;i<B.size();i++){
            mp[B[i]]=true;
        }
        
        int n=A.size();
        vector<int>dp(n+1,-1);
        return solve(A,0,n,mp,dp);
    }
};
